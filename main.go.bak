package main

import (
	"fmt"
)

type Locker interface {
	Lock()
	Unlock()
}

type Cond struct {
	L Locker
}

type Mutex int

func GetPtr(m Mutex) *Mutex {
	return &m
}

func (m *Mutex) Lock() {
	fmt.Println("Lock called")
}

func (m *Mutex) Unlock() {
	fmt.Println("Unlock called")
}

func NewCond() *Cond {

	var m *Mutex = GetPtr(Mutex(5))
	return &Cond{
		L: m,
	}
}

func main() {
	fmt.Println("tesT")

	C := NewCond()
	C.L.Lock()
}
